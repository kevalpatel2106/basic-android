apply plugin: 'com.android.application'
apply from: '../misc/config.gradle'

android {
    signingConfigs {
        //This are th play sotre signing config.
        //TODO replace with the original config.
        playStore {
            if (System.getenv("IS_CI_BUILD").equals("true")) {
                //It is CI build, load it from the environment variables.
                //See circle.yml file.
                storeFile file(System.getenv("KEY_STORE"))
                storePassword System.getenv("KEY_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("ALIAS_PASSWORD")
            } else {
                //If this is the local build, load it from the keystore.properties file
                File signFile = rootProject.file('./misc/keystore.properties')
                if (signFile.exists()) {
                    Properties props = new Properties()
                    props.load(new FileInputStream(signFile))

                    keyAlias props['keystore.alias']
                    keyPassword props['keystore.password']
                    storeFile file(props['keystore.file'])
                    storePassword props['keystore.aliaspassword']
                } else {
                    throw new GradleException("keystore.properties file not found.")
                }
            }
        }
    }

    compileSdkVersion buidlConfig.compile
    buildToolsVersion buidlConfig.buildToolVersion

    defaultConfig {
        applicationId buidlConfig.applicationId

        //sdks
        minSdkVersion buidlConfig.min
        targetSdkVersion buidlConfig.target

        //Version config
        versionCode versionConfig.versionCode
        versionName versionConfig.versionName


        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.playStore
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable false
            signingConfig signingConfigs.playStore
            minifyEnabled false
            zipAlignEnabled true
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }
}

dependencies {
    //Testing dependency
    testCompile testDependency.junit
    androidTestCompile testDependency.rules
    androidTestCompile(testDependency.esspresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //support dependency
    compile supportDependency.appCompat
    compile supportDependency.recyclerView
    compile supportDependency.cardView
    compile supportDependency.design

    //Butter knife
    compile butterKnifeDependency.butterKnife
    annotationProcessor butterKnifeDependency.annotationProcessor

    //GSON
    compile otherDependency.gson

    //Retrofit
    compile retrofitDependency.retrofit
    compile retrofitDependency.gsonPlugin
    compile retrofitDependency.rxPlugin
    compile retrofitDependency.logger

    //Rx
    compile rxDependency.rxJava
    compile rxDependency.rxAndroid
}
